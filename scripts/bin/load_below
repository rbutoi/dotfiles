#!/bin/bash
# Return with non-zero status if system load (1, 5, and 15) are under a
# threshold.

THRESHOLD=${1:-300}

if [[ $(uname) == "Darwin" ]]; then
  # $ sysctl -n vm.loadavg
  # { 1.64 5.20 7.25 }
  load=$(sysctl -n vm.loadavg)
  load_float1=$( echo -n $load | cut -d' ' -f2)
  load_float5=$( echo -n $load | cut -d' ' -f3)
  load_float15=$(echo -n $load | cut -d' ' -f4)
else
  load=$(cat /proc/loadavg)
  load_float1=$( echo -n $load | cut -d' ' -f1)
  load_float5=$( echo -n $load | cut -d' ' -f2)
  load_float15=$(echo -n $load | cut -d' ' -f3)
fi

# bash has bad float support https://stackoverflow.com/questions/8654051/how-can-i-compare-two-floating-point-numbers-in-bash

load1=${load_float1/./}
load5=${load_float5/./}
load15=${load_float15/./}

# https://blog.famzah.net/tag/bash-force-decimal-representation/
if [[ "10#$load1"  -gt $THRESHOLD ]] ||
   [[ "10#$load5"  -gt $THRESHOLD ]] ||
   [[ "10#$load15" -gt $THRESHOLD ]]; then
   exit 1 # return with failure if above any load threshold
fi
:
